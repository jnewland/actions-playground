name: mergeable
on:
  status:

env:
  LABEL: mergeable
  RETRY_INTERVAL: "5000"

jobs:
  process-mergeable-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'status'
    steps:
      - uses: actions/github-script@v3
        timeout-minutes: 30
        with:
          script: |
            const prs = await github.repos.listPullRequestsAssociatedWithCommit({
              ...context.repo,
              commit_sha: context.payload.sha
            })
            if (prs.data.length === 0) {
              return;
            }
            await Promise.all(prs.data.map(async (pr) => {
              if (pr.state != 'open') {
                return;
              }
              console.log(`html_url=${pr.html_url} mergeable=${pr.mergeable} mergeable_state=${pr.mergeable_state}`);
              var mergeable = pr.mergeable;
              while (mergeable != 'null') {
                await new Promise(r => setTimeout(r, ${{ env.RETRY_INTERVAL }}));
                const updatedPr = github.pulls.get({
                  ...context.repo,
                  pull_number: pr.number
                });
                mergeable = pr.data.mergeable;
                console.log('html_url=${pr.html_url} mergeable=${pr.mergeable} mergeable_state=${pr.mergeable_state}`);
              }
              if (mergeable == 'true') {
                await github.issues.addLabels({
                  ...context.repo,
                  issue_number: pr.number,
                  labels: [process.env.LABEL]
                })
              } else {
                try {
                  await github.issues.removeLabel({
                    ...context.repo,
                    issue_number: pr.number,
                    name: process.env.LABEL
                  })
                } catch (e) {
                  if (e.status != 404) {
                    throw(e);
                  }
                }
              }
            }));
