name: "Run TypeScript Script"
description: "Runs a TypeScript script using actions/github-script"
inputs:
    script:
        description: "Name of the function to call"
        default: ""
    github-token:
        description: The GitHub token used to create an authenticated client
        required: true
    debug:
        description: Whether to tell the GitHub client to log details of its requests. true or false. Default is to run in debug mode when the GitHub Actions step debug logging is turned on.
        default: ${{ runner.debug == '1' }}
    user-agent:
        description: An optional user-agent string
        default: actions/github-script
    previews:
        description: A comma-separated list of API previews to accept
    result-encoding:
        description: Either "string" or "json" (default "json")â€”how the result will be encoded
        default: json
    retries:
        description: The number of times to retry a request
        default: "0"
    retry-exempt-status-codes:
        description: A comma separated list of status codes that will NOT be retried e.g. "400,500". No effect unless `retries` is set
        default: 400,401,403,404,422 # from https://github.com/octokit/plugin-retry.js/blob/9a2443746c350b3beedec35cf26e197ea318a261/src/index.ts#L14

runs:
    using: "composite"
    steps:
        - name: "Execute script"
          uses: "actions/github-script@v6"
          env:
              FUNCTION_NAME: ${{ inputs.script }}
          with:
              result-encoding: ${{ inputs.result-encoding }}
              retries: ${{ inputs.retries }}
              user-agent: ${{ inputs.user-agent }}
              debug: ${{ inputs.debug }}
              github-token: ${{ inputs.github-token }}
              previews: ${{ inputs.previews }}
              retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
              script: |
                  const { ${{ env.FUNCTION_NAME }} } = await import('${{ github.workspace }}/.github/dist/index.js')
                  return await ${{ env.FUNCTION_NAME }}({github, context, core});
